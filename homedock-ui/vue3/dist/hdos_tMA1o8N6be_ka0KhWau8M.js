import{_ as s,H as B,u as E,j,d as x,C as G}from"./hdos_CaLC6kgDf6KbpMWTlLADI.js";import{S as _,s as M}from"./hdos_CWmO-0KEeGgFlSfFQw7en.js";import{o as S}from"./hdos_CVlnHPTUJbXSmgSTd5QHY.js";import{d as $,r as F,e as m}from"./hdos_QudaiPy5tXw1bsiwMJIZs.js";const n=()=>null;n.isSelectOption=!0;n.displayName="AAutoCompleteOption";const r=()=>null;r.isSelectOptGroup=!0;r.displayName="AAutoCompleteOptGroup";function P(e){var u,o;return((u=e?.type)===null||u===void 0?void 0:u.isSelectOption)||((o=e?.type)===null||o===void 0?void 0:o.isSelectOptGroup)}const k=()=>s(s({},S(M(),["loading","mode","optionLabelProp","labelInValue"])),{dataSource:Array,dropdownMenuStyle:{type:Object,default:void 0},dropdownMatchSelectWidth:{type:[Number,Boolean],default:!0},prefixCls:String,showSearch:{type:Boolean,default:void 0},transitionName:String,choiceTransitionName:{type:String,default:"zoom"},autofocus:{type:Boolean,default:void 0},backfill:{type:Boolean,default:void 0},filterOption:{type:[Boolean,Function],default:!1},defaultActiveFirstOption:{type:Boolean,default:!0},status:String}),v=$({compatConfig:{MODE:3},name:"AAutoComplete",inheritAttrs:!1,props:k(),slots:Object,setup(e,u){let{slots:o,attrs:C,expose:b}=u;B(!e.dropdownClassName);const c=F(),A=()=>{var t;const a=G((t=o.default)===null||t===void 0?void 0:t.call(o));return a.length?a[0]:void 0};b({focus:()=>{var t;(t=c.value)===null||t===void 0||t.focus()},blur:()=>{var t;(t=c.value)===null||t===void 0||t.blur()}});const{prefixCls:i}=E("select",e);return()=>{var t,a,d;const{size:O,dataSource:y,notFoundContent:N=(t=o.notFoundContent)===null||t===void 0?void 0:t.call(o)}=e;let p;const{class:g}=C,h={[g]:!!g,[`${i.value}-lg`]:O==="large",[`${i.value}-sm`]:O==="small",[`${i.value}-show-search`]:!0,[`${i.value}-auto-complete`]:!0};if(e.options===void 0){const f=((a=o.dataSource)===null||a===void 0?void 0:a.call(o))||((d=o.options)===null||d===void 0?void 0:d.call(o))||[];f.length&&P(f[0])?p=f:p=y?y.map(l=>{if(j(l))return l;switch(typeof l){case"string":return m(n,{key:l,value:l},{default:()=>[l]});case"object":return m(n,{key:l.value,value:l.value},{default:()=>[l.text]});default:throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.")}}):[]}const w=S(s(s(s({},e),C),{mode:_.SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:A,notFoundContent:N,class:h,popupClassName:e.popupClassName||e.dropdownClassName,ref:c}),["dataSource","loading"]);return m(_,w,x({default:()=>[p]},S(o,["default","dataSource","options"])))}}}),H=s(v,{Option:n,OptGroup:r,install(e){return e.component(v.name,v),e.component(n.displayName,n),e.component(r.displayName,r),e}});export{H as A};
