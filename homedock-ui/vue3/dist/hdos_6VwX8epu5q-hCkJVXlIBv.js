import{E as u,d as E,K as B,r as j,L as x,a0 as G,e as m,P as M,aw as P}from"./hdos_DO2KlacCFzRPXG-gXmGHl.js";import{S as _,s as $}from"./hdos_yBgyjaX5v38Op7Db2WTTk.js";import{o as O}from"./hdos_CT5z5oIZwHJJAu_bO76z6.js";const l=()=>null;l.isSelectOption=!0;l.displayName="AAutoCompleteOption";const d=()=>null;d.isSelectOptGroup=!0;d.displayName="AAutoCompleteOptGroup";function F(e){var s,n;return((s=e==null?void 0:e.type)===null||s===void 0?void 0:s.isSelectOption)||((n=e==null?void 0:e.type)===null||n===void 0?void 0:n.isSelectOptGroup)}const k=()=>u(u({},O($(),["loading","mode","optionLabelProp","labelInValue"])),{dataSource:Array,dropdownMenuStyle:{type:Object,default:void 0},dropdownMatchSelectWidth:{type:[Number,Boolean],default:!0},prefixCls:String,showSearch:{type:Boolean,default:void 0},transitionName:String,choiceTransitionName:{type:String,default:"zoom"},autofocus:{type:Boolean,default:void 0},backfill:{type:Boolean,default:void 0},filterOption:{type:[Boolean,Function],default:!1},defaultActiveFirstOption:{type:Boolean,default:!0},status:String}),S=E({compatConfig:{MODE:3},name:"AAutoComplete",inheritAttrs:!1,props:k(),slots:Object,setup(e,s){let{slots:n,attrs:y,expose:b}=s;B(!e.dropdownClassName);const c=j(),A=()=>{var t;const a=P((t=n.default)===null||t===void 0?void 0:t.call(n));return a.length?a[0]:void 0};b({focus:()=>{var t;(t=c.value)===null||t===void 0||t.focus()},blur:()=>{var t;(t=c.value)===null||t===void 0||t.blur()}});const{prefixCls:r}=x("select",e);return()=>{var t,a,i;const{size:C,dataSource:g,notFoundContent:N=(t=n.notFoundContent)===null||t===void 0?void 0:t.call(n)}=e;let f;const{class:v}=y,h={[v]:!!v,[`${r.value}-lg`]:C==="large",[`${r.value}-sm`]:C==="small",[`${r.value}-show-search`]:!0,[`${r.value}-auto-complete`]:!0};if(e.options===void 0){const p=((a=n.dataSource)===null||a===void 0?void 0:a.call(n))||((i=n.options)===null||i===void 0?void 0:i.call(n))||[];p.length&&F(p[0])?f=p:f=g?g.map(o=>{if(G(o))return o;switch(typeof o){case"string":return m(l,{key:o,value:o},{default:()=>[o]});case"object":return m(l,{key:o.value,value:o.value},{default:()=>[o.text]});default:throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.")}}):[]}const w=O(u(u(u({},e),y),{mode:_.SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:A,notFoundContent:N,class:h,popupClassName:e.popupClassName||e.dropdownClassName,ref:c}),["dataSource","loading"]);return m(_,w,M({default:()=>[f]},O(n,["default","dataSource","options"])))}}}),L=u(S,{Option:l,OptGroup:d,install(e){return e.component(S.name,S),e.component(l.displayName,l),e.component(d.displayName,d),e}});export{L as A};
